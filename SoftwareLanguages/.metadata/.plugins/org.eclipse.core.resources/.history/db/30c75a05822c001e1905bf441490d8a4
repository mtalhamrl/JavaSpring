package SoftwareLanguages.Languages.webApi.concretes;

import java.util.List;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import SoftwareLanguages.Languages.business.abstracts.SoftwareLanguageService;
import SoftwareLanguages.Languages.business.requests.CreateSoftwareLanguages;
import SoftwareLanguages.Languages.business.requests.UpdateSoftwareLanguagesRequest;
import SoftwareLanguages.Languages.business.responses.GetAllSoftwareLanguagesResponse;
import SoftwareLanguages.Languages.business.responses.GetByIdSoftwareLanguagesResponse;
import io.swagger.v3.oas.annotations.parameters.RequestBody;
import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/languages")
@RequiredArgsConstructor
public class SoftwareLanguagesController {
	private final SoftwareLanguageService softwareLanguageService;
//All args constructor kullansaydım burdaki constructoruma gerek kalmayacaktı..!
	
	@GetMapping()
	public List<GetAllSoftwareLanguagesResponse> getAll(){
		return softwareLanguageService.getAll();
	}
	@GetMapping("/{id}")
	public GetByIdSoftwareLanguagesResponse getById(@PathVariable int id) {
		return softwareLanguageService.getById(id);
	}
	@PostMapping()
	public void add(@RequestBody CreateSoftwareLanguages createSoftwareLanguages) {
		this.softwareLanguageService.add(createSoftwareLanguages);
	}
	@DeleteMapping("/{id}")
	public void delete(@PathVariable int id) {
		this.softwareLanguageService.delete(id);
	}
	@PutMapping()
	public void update(UpdateSoftwareLanguagesRequest updateSoftwareLanguagesReques) {
		this.softwareLanguageService.update(updateSoftwareLanguagesReques);
	}
}
